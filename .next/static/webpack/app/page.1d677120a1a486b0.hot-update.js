/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Sidebar.tsx":
/*!************************************!*\
  !*** ./src/components/Sidebar.tsx ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import { Plus, FileText, Menu, X, Upload } from \"lucide-react\";\n// import { Button } from \"@/components/ui/button\";\n// import { Input } from \"@/components/ui/input\";\n// import { cn } from \"@/lib/utils\";\n// import { useState } from \"react\";\n// import { Chat } from \"./types\";\n// interface SidebarProps {\n//   chats: Chat[];\n//   currentChatId: string | null;\n//   onSelectChat: (chatId: string) => void;\n//   onNewChat: () => void;\n//   onClearAllChats: () => void;\n//   onFileUpload: (file: File) => void;\n//   onUpload: (file: File) => void;\n//   chatHistory: any[];\n// }\n// export function Sidebar({ \n//   chats = [], \n//   currentChatId, \n//   onSelectChat, \n//   onNewChat, \n//   onClearAllChats,\n//   onFileUpload \n// }: SidebarProps) {\n//   const [isCollapsed, setIsCollapsed] = useState(false);\n//   const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const file = e.target.files?.[0];\n//     if (file) {\n//       onFileUpload(file);\n//       // Reset the input value to allow uploading the same file again\n//       e.target.value = '';\n//     }\n//   };\n//   const formatDate = (date: Date | string) => {\n//     const d = new Date(date);\n//     const now = new Date();\n//     const diffTime = Math.abs(now.getTime() - d.getTime());\n//     const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n//     if (diffDays === 0) {\n//       return 'Today';\n//     } else if (diffDays === 1) {\n//       return 'Yesterday';\n//     } else if (diffDays < 7) {\n//       return `${diffDays} days ago`;\n//     } else {\n//       return d.toLocaleDateString();\n//     }\n//   };\n//   return (\n//     <>\n//       {/* Mobile Menu Button */}\n//       <Button\n//         className=\"md:hidden fixed top-20 left-4 z-50 bg-card border border-border\"\n//         size=\"icon\"\n//         onClick={() => setIsCollapsed(!isCollapsed)}\n//       >\n//         <Menu className=\"h-4 w-4\" />\n//       </Button>\n//       {/* Sidebar */}\n//       <aside className={cn(\n//         \"bg-sidebar border-r border-sidebar-border flex flex-col transition-all duration-300\",\n//         \"fixed md:relative z-40 h-full md:h-auto\",\n//         isCollapsed ? \"-translate-x-full md:translate-x-0 md:w-16\" : \"w-80\",\n//         \"md:translate-x-0\"\n//       )}>\n//         {/* Mobile Close Button */}\n//         <Button\n//           className=\"md:hidden absolute top-4 right-4\"\n//           variant=\"ghost\"\n//           size=\"icon\"\n//           onClick={() => setIsCollapsed(true)}\n//         >\n//           <X className=\"h-4 w-4\" />\n//         </Button>\n//         {/* Header */}\n//         {!isCollapsed && (\n//           <div className=\"p-4 border-b border-sidebar-border space-y-2\">\n//             <Button \n//               onClick={onNewChat}\n//               className=\"w-full bg-gradient-primary hover:shadow-glow transition-all duration-300 text-black font-medium\"\n//             >\n//               <Plus className=\"mr-2 h-4 w-4\" />\n//               New Chat\n//             </Button>\n// <label htmlFor=\"file-upload-sidebar\" className=\"cursor-pointer w-full\">\n//   <input\n//     type=\"file\"\n//     id=\"file-upload-sidebar\"\n//     accept=\".pdf,.jpg,.jpeg,.png\"\n//     onChange={handleFileUpload}\n//     className=\"hidden\"\n//   />\n//   <Button\n//     variant=\"outline\"\n//     className=\"w-full text-muted-foreground\"\n//     onClick={() => {\n//       // This will trigger the file input\n//       document.getElementById('file-upload-sidebar')?.click();\n//     }}\n//   >\n//     <Upload className=\"mr-2 h-4 w-4\" />\n//     Upload Document\n//   </Button>\n// </label>\n//           </div>\n//         )}\n//         {/* Collapsed State */}\n//         {isCollapsed && (\n//           <div className=\"p-2 border-b border-sidebar-border hidden md:block space-y-2\">\n//             <Button \n//               onClick={onNewChat}\n//               size=\"icon\"\n//               className=\"w-full bg-gradient-primary hover:shadow-glow transition-all duration-300\"\n//             >\n//               <Plus className=\"h-4 w-4\" />\n//             </Button>\n//             <label htmlFor=\"file-upload-sidebar-collapsed\" className=\"cursor-pointer w-full\">\n//               <Input\n//                 type=\"file\"\n//                 id=\"file-upload-sidebar-collapsed\"\n//                 accept=\".pdf,.jpg,.jpeg,.png\"\n//                 onChange={handleFileUpload}\n//                 className=\"hidden\"\n//               />\n//               <Button\n//                 variant=\"outline\"\n//                 size=\"icon\"\n//                 className=\"w-full\"\n//               >\n//                 <Upload className=\"h-4 w-4\" />\n//               </Button>\n//             </label>\n//           </div>\n//         )}\n//         {/* Chat History */}\n//         <div className=\"flex-1 overflow-y-auto\">\n//           <div className=\"p-4\">\n//             {!isCollapsed && (\n//               <div className=\"flex items-center justify-between mb-3\">\n//                 <h3 className=\"text-sm font-medium text-sidebar-foreground\">\n//                   Chat History\n//                 </h3>\n//                 {chats && chats.length > 0 && (\n//                   <Button\n//                     variant=\"ghost\"\n//                     size=\"sm\"\n//                     onClick={onClearAllChats}\n//                     className=\"text-xs text-muted-foreground hover:text-destructive\"\n//                   >\n//                     Clear All\n//                   </Button>\n//                 )}\n//               </div>\n//             )}\n//             <div className=\"space-y-2\">\n//               {chats && chats.map((chat) => (\n//                 <button\n//                   key={chat.id}\n//                   onClick={() => onSelectChat(chat.id)}\n//                   className={cn(\n//                     \"w-full text-left rounded-lg border transition-colors\",\n//                     \"hover:bg-sidebar-accent hover:border-primary/50\",\n//                     currentChatId === chat.id \n//                       ? \"bg-sidebar-accent border-primary text-sidebar-foreground\" \n//                       : \"border-sidebar-border text-sidebar-foreground/70\",\n//                     isCollapsed ? \"p-2\" : \"p-3\"\n//                   )}\n//                 >\n//                   <div className=\"flex items-start gap-3\">\n//                     <FileText className=\"h-4 w-4 mt-0.5 text-primary flex-shrink-0\" />\n//                     {!isCollapsed && (\n//                       <div className=\"flex-1 min-w-0\">\n//                         <p className=\"text-sm font-medium truncate\">\n//                           {chat.title}\n//                         </p>\n//                         <p className=\"text-xs text-sidebar-foreground/50 mt-1\">\n//                           {formatDate(chat.createdAt)}\n//                         </p>\n//                       </div>\n//                     )}\n//                   </div>\n//                 </button>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//         {/* Collapse Toggle for Desktop */}\n//         <div className=\"hidden md:block p-2 border-t border-sidebar-border\">\n//           <Button\n//             variant=\"ghost\"\n//             size=\"sm\"\n//             onClick={() => setIsCollapsed(!isCollapsed)}\n//             className=\"w-full text-muted-foreground\"\n//           >\n//             {isCollapsed ? \">\" : \"<\"}\n//           </Button>\n//         </div>\n//       </aside>\n//       {/* Mobile Overlay */}\n//       {!isCollapsed && (\n//         <div \n//           className=\"md:hidden fixed inset-0 bg-black/50 z-30\"\n//           onClick={() => setIsCollapsed(true)}\n//         />\n//       )}\n//     </>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Sidebar.tsx\n"));

/***/ })

});